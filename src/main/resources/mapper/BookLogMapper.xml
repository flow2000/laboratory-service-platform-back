<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.miku.lab.dao.BookLogDao">


    <select id="getAllBookLog" resultType="com.miku.lab.entity.BookLog" parameterType="com.miku.lab.entity.BookLog">
        select *from sys_booking_log
        <where>
            del_flag=0
        </where>
    </select>

    <select id="getAllBookMachineById" resultType="com.miku.lab.entity.BookMachine" parameterType="com.miku.lab.entity.BookMachine">
        select *from wx_booking_machine
        <where>
            openId=#{openId} and del_flag=0 and valid_status=1
        </where>
    </select>

    <select id="getWxUserByOpenId" resultType="com.miku.lab.entity.WxUser" parameterType="com.miku.lab.entity.BookMachine">
        select *from wx_booking_user
        <where>
            openId=#{openId} and del_flag=0
        </where>
    </select>

    <select id="getMachineAndCount" resultType="com.miku.lab.entity.Machine" parameterType="map">
        select *from sys_machine
        <where>
            machine_id=#{machineCode} and bookable_count>=#{machineNumber} and del_flag=0
        </where>
    </select>

    <select id="getMachine" resultType="com.miku.lab.entity.Machine" parameterType="map">
        select *from sys_machine
        <where>
            machine_id=#{machine_id}  and del_flag=0
        </where>
    </select>

    <insert id="addBookMachine" parameterType="map">
        insert
        into wx_booking_machine(openId,booking_code,machine_code,machine_number,valid_status,del_flag,create_time)
        values(#{openId},#{bookingCode},#{machineCode},#{machineNumber},2,0,NOW())
    </insert>

    <update id="updateMachine" parameterType="map">
        update sys_machine
        set bookable_count=#{last_number}
        <where>
            machine_id=#{machineCode}
        </where>
    </update>

    <select id="getLabById" resultType="com.miku.lab.entity.LabInfo" parameterType="com.miku.lab.entity.OrderCheck">
        select *from sys_lab_info
        <where>
            lab_id=#{labId} and del_flag=0
        </where>
    </select>

    <update id="updateLabSetStatus" parameterType="map">
        update sys_lab_info
        set lab_status=#{labStatus},update_time=NOW()
        <where>
            lab_id=#{labId} and valid_status=1
        </where>
    </update>


    <insert id="addBookLab" parameterType="map">
        insert
        into sys_order_check(openId,booking_code,username,lab_id,
             order_applyer,order_phone,order_number,lab_name,remark,
             start_time,end_time,checker,check_status,create_time,del_flag)
        values(
                #{openId},#{bookingCode},#{username},#{labId},
                #{orderApplyer},#{orderPhone},#{orderNumber},#{labName},#{remark},
                #{startTime},#{endTime},#{checker},#{chechStatus},NOW(),0
                )
    </insert>

    <update id="updateNumberByOpenIdAndMachineId" parameterType="map">
        update wx_booking_machine
        set machine_number=#{machine_number},update_time=NOW()
        <where>
            openId=#{openId} and machine_code=#{machine_id} and del_flag=0
        </where>
    </update>

    <select id="getBookLogByOpenIdAndMachineId" resultType="com.miku.lab.entity.BookMachine" parameterType="map">
        select *from wx_booking_machine
        <where>
            openId=#{openId} and machine_code=#{machine_id} and del_flag=0
        </where>
    </select>

    <update id="delWxBookMachine" parameterType="map">
        update wx_booking_machine
        set del_flag=1,del_time=NOW()
        <where>
            openId=#{openId} and machine_code=#{machine_id} and del_flag=0
        </where>
    </update>


    <insert id="addBookingLog" parameterType="map">
        insert
        into sys_booking_log(openId,booking_code,booking_checker,creater,create_time,del_flag)
        values(
            #{openId},
            #{bookingCode},
            #{checker},
            #{creater},
            NOW(),
            0
        )
    </insert>

    <update id="setWxOrderCheckStatus" parameterType="map">
        update sys_order_check
        set check_status=#{check_status}
        <where>
            openId=#{openId} and lab_id=#{labId}
        </where>
    </update>

    <select id="getWxOrderCheck" resultType="com.miku.lab.entity.OrderCheck" parameterType="map">
        select *from sys_order_check
        <where>
            openId=#{openId} and lab_id=#{labId} and valid_status=1 and check_status=#{checkStatus}
        </where>
    </select>

    <update id="setBookingLogStatus" parameterType="map">
        update sys_booking_log
        set valid_status=#{validStatus}
        <where>
            booking_code=#{bookingCode}
        </where>
    </update>

    <update id="setWxBookingMachineStatus" parameterType="map">
        update wx_booking_machine
        set valid_status=#{validStatus}
        <where>
            booking_code=#{bookingCode} and openId=#{openId}
        </where>
    </update>

    <select id="getMachineById" resultType="com.miku.lab.entity.BookMachine" parameterType="map">
        select *from wx_booking_machine
        <where>
            openId=#{openId}  and valid_status=#{validStatus} and booking_code=#{bookingCode}
        </where>
    </select>

    <update id="setMachineNumber" parameterType="map">
        update sys_machine
        set bookable_count=#{last_number}
        <where>
            machine_id=#{machine_id} and del_flag=0
        </where>
    </update>

    <update id="updateWxUserToken" parameterType="String">
        update wx_booking_user set token=#{token} where openId=#{openid};
    </update>


</mapper>
